a + b / 3.1e6f64 + c /*hello*/ +
 d \
* 2 */**/ 1i32
{}

x = true
y ~ $None
else if x do y + (if z)
else {
    y ~ $True
    z ~ $False
}
else 1 + 3

1 ~ $_ do 2 ~ $_ else {}
1 ~ $_ do (2 ~ $_ else {})

if a == 1 do { }
else a == 2 do { }

(a ~ i32) + (b ~ i32)
x ~ $Some = 10

    x = // comment here
    1 + *2

    {3 + !4 } * *&5

    -3 * 4 /* in the middle */ + x \ // tricky comment
    + y / *z

c ~ $BinOp do {
    l = self.lv(c.left)
    r = self.lv(c.right)
    o = c.op
}
o ~ $Add do self.add_vals(l ~ $Some, r ~ $Some)

x = args().nth(1)       //: $Some &str | $None ()
x = parse_int(x ~ &str) //: i32 | $None ()
x = x ~ int else 0      //: i32
